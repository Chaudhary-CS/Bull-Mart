version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: bulls-mart-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: bullmart
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./deployment/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - bulls-mart-network

  # Redis Cache (optional)
  redis:
    image: redis:7-alpine
    container_name: bulls-mart-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bulls-mart-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bulls-mart-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 8000
      DB_URL: mongodb://admin:password123@mongodb:27017/bullmart?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_EXPIRES: 7d
    ports:
      - "8000:8000"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - bulls-mart-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (if needed)
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: bulls-mart-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:8000/api/v2
      REACT_APP_SOCKET_URL: http://localhost:4000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - bulls-mart-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: bulls-mart-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployment/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - bulls-mart-network

  # Monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: bulls-mart-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./deployment/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - bulls-mart-network

  # Grafana Dashboard (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: bulls-mart-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - bulls-mart-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  bulls-mart-network:
    driver: bridge 